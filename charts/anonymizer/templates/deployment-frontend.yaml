# templates/deployment-frontend.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: anonymizer-frontend
  annotations:
    app.kubernetes.io/image: "{{ .Values.backend.repository }}:{{ .Values.backend.tag }}"
    app.kubernetes.io/version: "{{ .Values.backend.tag }}"

spec:
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit | default 2 }}
  replicas: {{ .Values.frontend.replicas | default 1 }}
  strategy:
    type: RollingUpdate
    rollingUpdate: { maxUnavailable: 0, maxSurge: 1 }
  selector:
    matchLabels: { app: {{ include "anonymizer.fullname" . }}, tier: frontend }
  template:
    metadata:
      labels: { app: {{ include "anonymizer.fullname" . }}, tier: frontend }
    spec:
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds | default 5 }}
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.image.pullSecrets }}
        - name: {{ .name }}
      {{- end }}
      {{- end }}
      containers:
        - name: frontend
          image: {{ include "anonymizer.image" (dict "Values" .Values "repository" .Values.frontend.repository "tag" .Values.frontend.tag) }}
          imagePullPolicy: {{ .Values.frontend.pullPolicy | default "IfNotPresent" }}
          # Benannter Container-Port
          ports:
            - name: http
              containerPort: {{ .Values.frontend.containerPort | default ( .Values.frontend.port | default 8080 ) }}
              protocol: TCP

          readinessProbe:
            httpGet:
              path: /
              port: http     # <-- benannter Port
            initialDelaySeconds: 5
            periodSeconds: 5

          livenessProbe:
            httpGet:
              path: /
              port: http     # <-- benannter Port
            initialDelaySeconds: 10
            periodSeconds: 10

          {{- with .Values.frontend.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
