image: python:3.12-slim

stages: [lint, test]

variables:
  # Pip UX & Stabilität
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  PIP_NO_PYTHON_VERSION_WARNING: "1"
  PIP_DEFAULT_TIMEOUT: "60"
  PIP_ROOT_USER_ACTION: "ignore"

  # Cache in Projektverzeichnis -> wird von GitLab gecached
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

  # --- PyPI Mirror (optional) ---
  # Setze diese Variablen in GitLab -> Settings -> CI/CD -> Variables:
  # PIP_INDEX_URL: "https://pypi.org/simple"           (default)
  # PIP_EXTRA_INDEX_URL: "https://<dein-mirror>/simple" (optional)
  # (Falls interner Mirror Zertifikate braucht, füge den Host zu REQUESTS_CA_BUNDLE hinzu.)
  PIP_INDEX_URL: "https://pypi.org/simple"

# Cache invalidiert automatisch, wenn sich Requirements ändern
cache:
  key:
    files:
      - requirements.txt
      - requirements-dev.txt
      - requirements-test.txt
    prefix: "pip-v1-${CI_JOB_IMAGE}"
  paths:
    - .cache/pip/
    - .pytest_cache/
  policy: pull-push

# Falls du native Builds brauchst (selten): ent-kommentieren
# .setup_build_tools: &setup_build_tools
#   before_script:
#     - apt-get update && apt-get install -y --no-install-recommends build-essential gcc
#     - rm -rf /var/lib/apt/lists/*

.default_install: &default_install
  before_script:
    - python -V
    - pip install --upgrade pip
    # Pip nutzt PIP_INDEX_URL / PIP_EXTRA_INDEX_URL automatisch
    - pip install -r requirements-test.txt

lint:
  stage: lint
  <<: *default_install
  script:
    - ruff check .
    - black --check .

test:
  stage: test
  <<: *default_install
  script:
    - pytest -q -m "quarantine"
