name: Build & Push Docker Images

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]   # e.g., v1.0.0
  pull_request:

permissions:
  contents: read
  packages: write   # required for GHCR push on push/tag
  id-token: write

env:
  REGISTRY: ghcr.io

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Normalize owner to lowercase for OCI image refs
      - name: Normalize owner (lowercase)
        run: echo "IMAGE_NAMESPACE=${GITHUB_REPOSITORY_OWNER,,}" >> "$GITHUB_ENV"

      - name: Login to GHCR (push/tag only)
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version tag
        id: meta
        run: |
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            echo "TAG=${GITHUB_REF_NAME#v}" >> "$GITHUB_OUTPUT"
          else
            echo "TAG=latest" >> "$GITHUB_OUTPUT"
          fi

      - name: Build & (conditionally) Push backend
        uses: docker/build-push-action@v6
        with:
          context: .
          file: backend/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}  # no push on PRs
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAMESPACE }}/anonymizer-backend:${{ steps.meta.outputs.TAG }}
          provenance: false   # optional: speeds things up, avoids provenance issues

  build-frontend:
    runs-on: ubuntu-latest
    needs: build-backend
    steps:
      - uses: actions/checkout@v4

      - name: Normalize owner (lowercase)
        run: echo "IMAGE_NAMESPACE=${GITHUB_REPOSITORY_OWNER,,}" >> "$GITHUB_ENV"

      - name: Login to GHCR (push/tag only)
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version tag
        id: meta
        run: |
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            echo "TAG=${GITHUB_REF_NAME#v}" >> "$GITHUB_OUTPUT"
          else
            echo "TAG=latest" >> "$GITHUB_OUTPUT"
          fi

      - name: Build & (conditionally) Push frontend
        uses: docker/build-push-action@v6
        with:
          context: .
          file: frontend/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAMESPACE }}/anonymizer-frontend:${{ steps.meta.outputs.TAG }}
          provenance: false
