name: Build & Push Docker Images

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]  # z.B. v1.0.0
  pull_request:

permissions:
  contents: read
  packages: write   # wichtig fÃ¼r GHCR Push
  id-token: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAMESPACE: ${{ github.repository_owner }}

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version tag
        id: meta
        run: |
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            echo "TAG=${GITHUB_REF_NAME#v}" >> $GITHUB_OUTPUT
          else
            echo "TAG=latest" >> $GITHUB_OUTPUT
          fi

      - name: Build & Push backend
        uses: docker/build-push-action@v6
        with:
          context: .
          file: backend/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAMESPACE }}/anonymizer-backend:${{ steps.meta.outputs.TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-frontend:
    runs-on: ubuntu-latest
    needs: build-backend
    steps:
      - uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version tag
        id: meta
        run: |
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            echo "TAG=${GITHUB_REF_NAME#v}" >> $GITHUB_OUTPUT
          else
            echo "TAG=latest" >> $GITHUB_OUTPUT
          fi

      - name: Build & Push frontend
        uses: docker/build-push-action@v6
        with:
          context: .
          file: frontend/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAMESPACE }}/anonymizer-frontend:${{ steps.meta.outputs.TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
